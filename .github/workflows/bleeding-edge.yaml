name: CI (bleeding edge)

on:
  push:
    branches:
    - main
  pull_request:
    paths:
    - .github/workflows/bleeding-edge.yaml
  schedule:
    # run this every Wednesday at 3 am UTC
  - cron: 0 3 * * 3
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: tests with bleeding-edge crucial deps (${{ matrix.python-version }})
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - '3.14'
        - 3.14t
    timeout-minutes: 60

    concurrency:
      # auto-cancel any in-progress job *on the same branch*
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.python-version }}
      cancel-in-progress: true

    steps:
    - name: Checkout repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        # numpy cp314 nightlies require at least 3.14.0b1, which is not available
        # via uv at the time of writing.
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
    - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
      with:
        activate-environment: true
    - name: Configure uv
      run: |
        pin=${{ matrix.python-version }}
        echo "UV_PYTHON=${pin%-dev}" >> $GITHUB_ENV
        echo "UV_PYTHON_PREFERENCE=only-system" >> $GITHUB_ENV
        echo "UV_PRERELEASE=allow" >> $GITHUB_ENV
        echo "UV_INDEX=https://pypi.anaconda.org/scientific-python-nightly-wheels/simple" >> $GITHUB_ENV
        echo "UV_INDEX_STRATEGY=unsafe-best-match" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
        uv venv
        uv pip install --no-build setuptools wheel numpy Cython

    - name: Build
      # --no-build-isolation is used to guarantee that build time dependencies
      # are not installed by pip as specified from pyproject.toml, hence we get
      # to use the dev version of numpy at build time.
      run: |
        uv pip install -e . --no-build-isolation --group test

    - run: uv pip list

    - if: ${{ endsWith( matrix.python-version , 't') }}
      run: |
        echo "PYTHON_GIL=0" >> $GITHUB_ENV

    - name: Run Tests
      run: pytest --color=yes -ra

  create-issue:
    if: ${{ failure() && github.event_name == 'schedule' }}
    needs: [build]
    permissions:
      issues: write
    runs-on: ubuntu-latest
    name: Create issue on failure

    steps:
    - name: Create issue on failure
      uses: imjohnbo/issue-bot@572eed14422c4d6ca37e870f97e7da209422f5bd # v3.4.4
      with:
        title: 'TST: Upcoming dependency test failures'
        body: |
          The weekly build with future dependencies has failed. Check the logs
          https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
        pinned: false
        close-previous: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
