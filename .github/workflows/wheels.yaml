name: Build wheels and publish to PyPI

on:
  push:
    branches:
    - main
    tags:
    - v*
  pull_request:
    paths:
    - .github/workflows/wheels.yaml
    - setup.py
    - pyproject.toml
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build ${{ matrix.archs }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          archs: x86_64
          select: '*manylinux*'
          id: manylinux_x86_64
        - os: ubuntu-latest
          archs: x86_64
          select: '*musllinux*'
          id: musllinux_x86_64
        - os: macos-latest
          archs: x86_64
          select: '*'
          id: macos_x86_64
        - os: macos-latest
          archs: arm64
          select: '*'
          id: macos_arm64
        - os: windows-latest
          archs: AMD64
          select: '*'
          id: windows_AMD64

    steps:
    - name: Checkout repo
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b # v6.6.0
    - name: Build wheels for CPython
      uses: pypa/cibuildwheel@c923d83ad9c1bc00211c5041d0c3f73294ff88f6 # v3.1.4
      with:
        output-dir: dist
      env:
        CIBW_ARCHS: ${{ matrix.archs }}
        CIBW_BUILD: ${{ matrix.select }}

    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.id }}
        path: ./dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b # v6.6.0
    - name: Build sdist
      run: uv build --sdist
    - name: Upload sdist
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: sdist
        path: dist/*.tar.gz

  check_manifest:
    name: Check MANIFEST.in
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b # v6.6.0
      with:
        python-version: '3.13'
        activate-environment: true
    - name: Install build time dependencies
      run: |
        uv pip install Cython numpy setuptools wheel check-manifest
    - name: Build
      run: uv pip install --no-build-isolation .
    - run: check-manifest

  deploy:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist, check_manifest]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
    - name: Download sdist
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: sdist
        path: dist

    - name: Download wheels
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        path: dist
        pattern: wheels-*
        merge-multiple: true

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
      with:
        user: __token__
        password: ${{ secrets.pypi_token }}
